## GET DATA
atus_anual_2020 <- read_csv(".//conjunto_de_datos//atus_anual_2020.csv")
delete_na = function(x){ifelse(is.na(x), mfv(x, na_rm = TRUE), x)}
atus_anual_2020_checked = data.frame(sapply(atus_anual_2020,delete_na))
# Caught duplicated values
values <- duplicated(atus_anual_2020_checked)
# Obtained values
atus_anual_2020_no_duplicated = atus_anual_2020_checked[!values,]
atus_anual_2020 = atus_anual_2020_no_duplicated
rm(atus_anual_2020_no_duplicated)
rm(atus_anual_2020_checked)
rm(values)
## LOCATION
### GET DATA
states <- read.csv(".//conjunto_de_datos//tc_entidad.csv", header = TRUE,sep = ",")
municipality <- read.csv(".//conjunto_de_datos//tc_municipio.csv")
### CAST ID FIELDS TO INTEGER
atus_anual_2020$ID_ENTIDAD <- as.integer(atus_anual_2020$ID_ENTIDAD)
atus_anual_2020$ID_MUNICIPIO <- as.integer(atus_anual_2020$ID_MUNICIPIO)
### DELETE USELESS COLUMS
municipality <- select(municipality,-MM)
### QUERY JOIN( States - Municipality )
locations <- inner_join(states, municipality, by = NULL)
### DELETE USELESS COLUMS AGAIN...
locations <- select(locations,-MM)
### QUERY JOIN(Municipality - Atus_anual_2021_merge)
atus_anual_2020_merge <- inner_join(locations, atus_anual_2020, by = NULL)
## DAY
### GET DATA
days  <- read.csv(".//conjunto_de_datos//tc_dia.csv", header = TRUE,sep = ",")
### CAST ID FIELDS TO INTEGER
atus_anual_2020_merge$ID_DIA <- as.integer(atus_anual_2020_merge$ID_DIA)
### DELETE USELESS COLUMNS
days <- select(days,-MM)
### QUERY JOIN(Hours - Atus_anual_2021_merge)
atus_anual_2020_merge <- inner_join(days, atus_anual_2020_merge, by = NULL)
## HOUR
### GET DATA
hours  <- read.csv(".//conjunto_de_datos//tc_hora.csv", header = TRUE,sep = ",")
### CAST ID FIELDS TO INTEGER
atus_anual_2020_merge$ID_HORA <- as.integer(atus_anual_2020_merge$ID_HORA)
### DELETE USELESS COLUMS
hours <- select(hours,-MM)
### QUERY JOIN(Hours - Atus_anual_2021_merge)
atus_anual_2020_merge <- inner_join(hours, atus_anual_2020_merge, by = NULL)
## MINUTES
### GET DATA
minutes  <- read.csv(".//conjunto_de_datos//tc_minuto.csv", header = TRUE,sep = ",")
### CAST ID FIELDS TO INTEGER
atus_anual_2020_merge$ID_MINUTO <- as.integer(atus_anual_2020_merge$ID_MINUTO)
### DELETE USELESS COLUMS
minutes <- select(minutes,-MM)
### QUERY JOIN(Hours - Atus_anual_2021_merge)
atus_anual_2020_merge <- inner_join(minutes, atus_anual_2020_merge, by = NULL)
## AGE
### GET DATA
ages  <- read.csv(".//conjunto_de_datos//tc_edad.csv", header = TRUE,sep = ",")
### CAST ID FIELDS TO INTEGER
atus_anual_2020_merge$ID_EDAD <- as.integer(atus_anual_2020_merge$ID_EDAD)
### DELETE USELESS COLUMS
ages <- select(ages,-MM)
### QUERY JOIN(Hours - Atus_anual_2021_merge)
atus_anual_2020_merge <- inner_join(ages, atus_anual_2020_merge, by = NULL)
# SET ORIGINAL
atus_anual_2020 = atus_anual_2020_merge
rm(atus_anual_2020_merge)
rm(ages)
rm(days)
rm(hours)
rm(locations)
rm(minutes)
rm(municipality)
rm(states)
atus_anual_data = atus_anual_2020
total_registros = nrow(atus_anual_data)
anio = "(2020)"
# 1 Total de acccidentes provocados por cada tipo de accidente de mayor a menor
accidentes_por_tipo = atus_anual_data %>%
group_by(TIPACCID) %>%
summarise(total = length(TIPACCID)) %>%
arrange(desc(total))
accidentes_por_tipo
titulo = paste("Total de acccidentes provocados por cada tipo de accidente ", anio)
titulo_x = "Tipo de accidente"
titulo_y = "Número total"
categorias = "Tipos de accidentes"
ggplot(data = accidentes_por_tipo,
mapping = aes(x = TIPACCID, y = total, fill = TIPACCID)) +
geom_bar(stat='identity') +
geom_text(aes(label = paste(total)), hjust = 0.5, vjust = 0) +
theme_minimal() +
guides(fill = guide_legend(title = categorias)) +
scale_fill_manual(values = paletteer_d("ggthemes::Hue_Circle")) +
labs(title = titulo, x = titulo_x, y = titulo_y) +
theme(axis.text.x = element_blank())
#5 Top 5 estados con más accidentes automovilístico
accidentes_por_estado = atus_anual_data %>%
group_by(NOM_ENTIDAD) %>%
summarise(total = length(NOM_ENTIDAD)) %>%
arrange(desc(total)) %>%
top_n(5)
titulo = paste("Los 5 estados con más accidentes automovilístico", anio)
titulo_x = ""
titulo_y = "Número total"
categorias = "Estados"
ggplot(data = accidentes_por_estado,
mapping = aes(x = NOM_ENTIDAD, y = total, fill = NOM_ENTIDAD)) +
geom_bar(stat='identity') +
geom_text(aes(label = total), hjust = 0.5, vjust = 0) +
theme_minimal() +
guides(fill = guide_legend(title = categorias)) +
labs(title = titulo, x = titulo_x, y = titulo_y)
#6 Género que suele tener más accidentes
accidentes_por_genero = atus_anual_data %>%
group_by(SEXO) %>%
summarise(total = length(SEXO),
porcentaje = total * 100 / nrow(atus_anual_data)) %>%
arrange(desc(total))
accidentes_por_genero
#7 Causa del accidente
causas_de_accidentes = atus_anual_data %>% group_by(CAUSAACCI) %>%
summarise(total = length(CAUSAACCI)) %>%
arrange(total)
titulo = paste("Causas de los accidentes automovilístico", anio)
titulo_x = "Causas"
titulo_y = "Número total"
categorias = "Causas"
ggplot(data = causas_de_accidentes,
mapping = aes(x = CAUSAACCI, y = total, fill = CAUSAACCI)) +
geom_bar(stat='identity') +
geom_text(aes(label = total), hjust = 0.5, vjust = 0) +
theme_minimal() +
guides(fill = guide_legend(title = categorias)) +
labs(title = titulo, x = titulo_x, y = titulo_y)
#9 y 10 Dia y hora con más probabilidad para tener un accidente(ID_HORA)
horas_de_accidente = atus_anual_data %>%
group_by(ID_HORA) %>%
summarise(total=length(ID_HORA)) %>%
arrange(desc(total)) %>%
top_n(3)
horas_de_accidente
titulo = paste("Las 3 horas con más accidentes registrados", anio)
titulo_x = "Horas"
titulo_y = "Número total"
categorias = "Horas"
ggplot(data = horas_de_accidente,
mapping = aes(x = as.character(ID_HORA), y = total, fill = as.character(ID_HORA))) +
geom_bar(stat='identity') +
geom_text(aes(label = total), hjust = 0.5, vjust = 0) +
theme_minimal() +
scale_fill_manual(values = paletteer_d("colorBlindness::paletteMartin")) +
guides(fill = guide_legend(title = categorias)) +
labs(title = titulo, x = titulo_x, y = titulo_y)
dias_de_accidente = atus_anual_data %>%
group_by(DIASEMANA) %>%
summarise(total = length(DIASEMANA)) %>%
arrange(desc(total))
titulo = paste("Número de accidentes por día de la semana", anio)
titulo_x = "Días"
titulo_y = "Número total"
categorias = "Días"
ggplot(data = dias_de_accidente,
mapping = aes(x = DIASEMANA, y = total, fill = DIASEMANA)) +
geom_bar(stat='identity') +
geom_text(aes(label = total), hjust = 0.5, vjust = 0) +
theme_minimal() +
scale_fill_manual(values = paletteer_d("colorBlindness::paletteMartin")) +
guides(fill = guide_legend(title = categorias)) +
labs(title = titulo, x = titulo_x, y = titulo_y)
# Set work directory on Linux
setwd("~//Accidentes-Nacionales-en-Transportes-Mexico")
library(mice)
library(readr)
library(dplyr)
library(ggplot2)
library(paletteer)
library(prismatic)
atus_anual_2021 <- read_csv(".//conjunto_de_datos//atus_anual_2021.csv")
#View(atus_anual_2021)
# funtion to delete Na
delete_na = function(x){ifelse(is.na(x), mfv(x, na_rm = TRUE), x)}
atus_anual_2021_checked = data.frame(sapply(atus_anual_2021,delete_na))
# Caught duplicated values
values <- duplicated(atus_anual_2021_checked)
# Obtained values
atus_anual_2021_no_duplicated = atus_anual_2021_checked[!values,]
atus_anual_2021 = atus_anual_2021_no_duplicated
rm(atus_anual_2021_no_duplicated)
rm(atus_anual_2021_checked)
rm(values)
# ALREADY AVAILABLE
#View(atus_anual_2021)
## LOCATION
### GET DATA
states <- read.csv(".//conjunto_de_datos//tc_entidad.csv", header = TRUE,sep = ",")
municipality <- read.csv(".//conjunto_de_datos//tc_municipio.csv")
### CAST ID FIELDS TO INTEGER
atus_anual_2021$ID_ENTIDAD <- as.integer(atus_anual_2021$ID_ENTIDAD)
atus_anual_2021$ID_MUNICIPIO <- as.integer(atus_anual_2021$ID_MUNICIPIO)
### DELETE USELESS COLUMS
municipality <- select(municipality,-MM)
### QUERY JOIN( States - Municipality )
locations <- inner_join(states, municipality, by = NULL)
### DELETE USELESS COLUMS AGAIN...
locations <- select(locations,-MM)
### QUERY JOIN(Municipality - Atus_anual_2021_merge)
atus_anual_2021_merge <- inner_join(locations, atus_anual_2021, by = NULL)
## DAY
### GET DATA
days  <- read.csv(".//conjunto_de_datos//tc_dia.csv", header = TRUE,sep = ",")
### CAST ID FIELDS TO INTEGER
atus_anual_2021_merge$ID_DIA <- as.integer(atus_anual_2021_merge$ID_DIA)
### DELETE USELESS COLUMNS
days <- select(days,-MM)
### QUERY JOIN(Hours - Atus_anual_2021_merge)
atus_anual_2021_merge <- inner_join(days, atus_anual_2021_merge, by = NULL)
## HOUR
### GET DATA
hours  <- read.csv(".//conjunto_de_datos//tc_hora.csv", header = TRUE,sep = ",")
### CAST ID FIELDS TO INTEGER
atus_anual_2021_merge$ID_HORA <- as.integer(atus_anual_2021_merge$ID_HORA)
### DELETE USELESS COLUMS
hours <- select(hours,-MM)
### QUERY JOIN(Hours - Atus_anual_2021_merge)
atus_anual_2021_merge <- inner_join(hours, atus_anual_2021_merge, by = NULL)
## MINUTES
### GET DATA
minutes  <- read.csv(".//conjunto_de_datos//tc_minuto.csv", header = TRUE,sep = ",")
### CAST ID FIELDS TO INTEGER
atus_anual_2021_merge$ID_MINUTO <- as.integer(atus_anual_2021_merge$ID_MINUTO)
### DELETE USELESS COLUMS
minutes <- select(minutes,-MM)
### QUERY JOIN(Hours - Atus_anual_2021_merge)
atus_anual_2021_merge <- inner_join(minutes, atus_anual_2021_merge, by = NULL)
## AGE
### GET DATA
ages  <- read.csv(".//conjunto_de_datos//tc_edad.csv", header = TRUE,sep = ",")
### CAST ID FIELDS TO INTEGER
atus_anual_2021_merge$ID_EDAD <- as.integer(atus_anual_2021_merge$ID_EDAD)
### DELETE USELESS COLUMS
ages <- select(ages,-MM)
### QUERY JOIN(Hours - Atus_anual_2021_merge)
atus_anual_2021_merge <- inner_join(ages, atus_anual_2021_merge, by = NULL)
# SET ORIGINAL
atus_anual_2021 = atus_anual_2021_merge
rm(atus_anual_2021_merge)
rm(ages)
rm(days)
rm(hours)
rm(locations)
rm(minutes)
rm(municipality)
rm(states)
#View(atus_anual_2021)
states <- read.csv(".//conjunto_de_datos//tc_entidad.csv", header = TRUE,sep = ",")
municipality <- read.csv(".//conjunto_de_datos//tc_municipio.csv")
### CAST ID FIELDS TO INTEGER
atus_anual_2021$ID_ENTIDAD <- as.integer(atus_anual_2021$ID_ENTIDAD)
atus_anual_2021$ID_MUNICIPIO <- as.integer(atus_anual_2021$ID_MUNICIPIO)
### DELETE USELESS COLUMS
municipality <- select(municipality,-MM)
### QUERY JOIN( States - Municipality )
locations <- inner_join(states, municipality, by = NULL)
### DELETE USELESS COLUMS AGAIN...
locations <- select(locations,-MM)
### QUERY JOIN(Municipality - Atus_anual_2021_merge)
atus_anual_2021_merge <- inner_join(locations, atus_anual_2021, by = NULL)
## DAY
### GET DATA
days  <- read.csv(".//conjunto_de_datos//tc_dia.csv", header = TRUE,sep = ",")
### CAST ID FIELDS TO INTEGER
atus_anual_2021_merge$ID_DIA <- as.integer(atus_anual_2021_merge$ID_DIA)
### DELETE USELESS COLUMNS
days <- select(days,-MM)
### QUERY JOIN(Hours - Atus_anual_2021_merge)
atus_anual_2021_merge <- inner_join(days, atus_anual_2021_merge, by = NULL)
## HOUR
### GET DATA
hours  <- read.csv(".//conjunto_de_datos//tc_hora.csv", header = TRUE,sep = ",")
### CAST ID FIELDS TO INTEGER
atus_anual_2021_merge$ID_HORA <- as.integer(atus_anual_2021_merge$ID_HORA)
### DELETE USELESS COLUMS
hours <- select(hours,-MM)
### QUERY JOIN(Hours - Atus_anual_2021_merge)
atus_anual_2021_merge <- inner_join(hours, atus_anual_2021_merge, by = NULL)
## MINUTES
### GET DATA
minutes  <- read.csv(".//conjunto_de_datos//tc_minuto.csv", header = TRUE,sep = ",")
### CAST ID FIELDS TO INTEGER
atus_anual_2021_merge$ID_MINUTO <- as.integer(atus_anual_2021_merge$ID_MINUTO)
### DELETE USELESS COLUMS
minutes <- select(minutes,-MM)
### QUERY JOIN(Hours - Atus_anual_2021_merge)
atus_anual_2021_merge <- inner_join(minutes, atus_anual_2021_merge, by = NULL)
## AGE
### GET DATA
ages  <- read.csv(".//conjunto_de_datos//tc_edad.csv", header = TRUE,sep = ",")
### CAST ID FIELDS TO INTEGER
atus_anual_2021_merge$ID_EDAD <- as.integer(atus_anual_2021_merge$ID_EDAD)
### DELETE USELESS COLUMS
ages <- select(ages,-MM)
### QUERY JOIN(Hours - Atus_anual_2021_merge)
atus_anual_2021_merge <- inner_join(ages, atus_anual_2021_merge, by = NULL)
# SET ORIGINAL
atus_anual_2021 = atus_anual_2021_merge
rm(atus_anual_2021_merge)
rm(ages)
rm(days)
rm(hours)
rm(locations)
rm(minutes)
rm(municipality)
rm(states)
accidentes_por_tipo = atus_anual_data %>%
group_by(TIPACCID) %>%
summarise(total = length(TIPACCID)) %>%
arrange(desc(total))
atus_anual_data = atus_anual_2021
total_registros = nrow(atus_anual_data)
anio = "(2021)"
# 1 Total de acccidentes provocados por cada tipo de accidente de mayor a menor
accidentes_por_tipo = atus_anual_data %>%
group_by(TIPACCID) %>%
summarise(total = length(TIPACCID)) %>%
arrange(desc(total))
accidentes_por_tipo
titulo = paste("Total de acccidentes provocados por cada tipo de accidente ", anio)
titulo_x = "Tipo de accidente"
titulo_y = "Número total"
categorias = "Tipos de accidentes"
ggplot(data = accidentes_por_tipo,
mapping = aes(x = TIPACCID, y = total, fill = TIPACCID)) +
geom_bar(stat='identity') +
geom_text(aes(label = paste(total)), hjust = 0.5, vjust = 0) +
theme_minimal() +
guides(fill = guide_legend(title = categorias)) +
scale_fill_manual(values = paletteer_d("ggthemes::Hue_Circle")) +
labs(title = titulo, x = titulo_x, y = titulo_y) +
theme(axis.text.x = element_blank())
#5 Top 5 estados con más accidentes automovilístico
accidentes_por_estado = atus_anual_data %>%
group_by(NOM_ENTIDAD) %>%
summarise(total = length(NOM_ENTIDAD)) %>%
arrange(desc(total)) %>%
top_n(5)
accidentes_por_estado
titulo = paste("Los 5 estados con más accidentes automovilístico", anio)
titulo_x = ""
titulo_y = "Número total"
categorias = "Estados"
ggplot(data = accidentes_por_estado,
mapping = aes(x = NOM_ENTIDAD, y = total, fill = NOM_ENTIDAD)) +
geom_bar(stat='identity') +
geom_text(aes(label = total), hjust = 0.5, vjust = 0) +
theme_minimal() +
guides(fill = guide_legend(title = categorias)) +
labs(title = titulo, x = titulo_x, y = titulo_y)
#6 Género que suele tener más accidentes
accidentes_por_genero = atus_anual_data %>%
group_by(SEXO) %>%
summarise(total = length(SEXO),
porcentaje = total * 100 / nrow(atus_anual_data)) %>%
arrange(desc(total))
accidentes_por_genero
#7 Causa del accidente
causas_de_accidentes = atus_anual_data %>% group_by(CAUSAACCI) %>%
summarise(total = length(CAUSAACCI)) %>%
arrange(total)
causas_de_accidentes
titulo = paste("Causas de los accidentes automovilístico", anio)
titulo_x = "Causas"
titulo_y = "Número total"
categorias = "Causas"
ggplot(data = causas_de_accidentes,
mapping = aes(x = CAUSAACCI, y = total, fill = CAUSAACCI)) +
geom_bar(stat='identity') +
geom_text(aes(label = total), hjust = 0.5, vjust = 0) +
theme_minimal() +
guides(fill = guide_legend(title = categorias)) +
labs(title = titulo, x = titulo_x, y = titulo_y)
#9 y 10 Dia y hora con más probabilidad para tener un accidente(ID_HORA)
horas_de_accidente = atus_anual_data %>%
group_by(ID_HORA) %>%
summarise(total=length(ID_HORA)) %>%
arrange(desc(total)) %>%
top_n(3)
horas_de_accidente
titulo = paste("Las 3 horas con más accidentes registrados", anio)
titulo_x = "Horas"
titulo_y = "Número total"
categorias = "Horas"
ggplot(data = horas_de_accidente,
mapping = aes(x = as.character(ID_HORA), y = total, fill = as.character(ID_HORA))) +
geom_bar(stat='identity') +
geom_text(aes(label = total), hjust = 0.5, vjust = 0) +
theme_minimal() +
scale_fill_manual(values = paletteer_d("colorBlindness::paletteMartin")) +
guides(fill = guide_legend(title = categorias)) +
labs(title = titulo, x = titulo_x, y = titulo_y)
dias_de_accidente = atus_anual_data %>%
group_by(DIASEMANA) %>%
summarise(total = length(DIASEMANA)) %>%
arrange(desc(total))
dias_de_accidente
titulo = paste("Número de accidentes por día de la semana", anio)
titulo_x = "Días"
titulo_y = "Número total"
categorias = "Días"
ggplot(data = dias_de_accidente,
mapping = aes(x = DIASEMANA, y = total, fill = DIASEMANA)) +
geom_bar(stat='identity') +
geom_text(aes(label = total), hjust = 0.5, vjust = 0) +
theme_minimal() +
scale_fill_manual(values = paletteer_d("colorBlindness::paletteMartin")) +
guides(fill = guide_legend(title = categorias)) +
labs(title = titulo, x = titulo_x, y = titulo_y)
View(atus_anual_2021)
if (!require("devtools")) {  install.packages("devtools")}
devtools::install_github("diegovalle/mxmaps")
install.packages("devtools")
devtools::install_github("diegovalle/mxmaps")
if (!require("devtools")) {  install.packages("devtools")}
devtools::install_github("diegovalle/mxmaps")
if (!require("devtools")) {  install.packages("devtools")}
# Set work directory on Linux
setwd("~//Accidentes-Nacionales-en-Transportes-Mexico")
dir()
atus_anual_2021 <- read_csv(".//conjunto_de_datos//atus_anual_2021.csv")
library(mice)
library(readr)
library(dplyr)
library(ggplot2)
library(paletteer)
library(prismatic)
atus_anual_2021 <- read_csv(".//conjunto_de_datos//atus_anual_2021.csv")
#View(atus_anual_2021)
# funtion to delete Na
delete_na = function(x){ifelse(is.na(x), mfv(x, na_rm = TRUE), x)}
atus_anual_2021_checked = data.frame(sapply(atus_anual_2021,delete_na))
# Caught duplicated values
values <- duplicated(atus_anual_2021_checked)
# Obtained values
atus_anual_2021_no_duplicated = atus_anual_2021_checked[!values,]
atus_anual_2021 = atus_anual_2021_no_duplicated
rm(atus_anual_2021_no_duplicated)
rm(atus_anual_2021_checked)
rm(values)
states <- read.csv(".//conjunto_de_datos//tc_entidad.csv", header = TRUE,sep = ",")
municipality <- read.csv(".//conjunto_de_datos//tc_municipio.csv")
### CAST ID FIELDS TO INTEGER
atus_anual_2021$ID_ENTIDAD <- as.integer(atus_anual_2021$ID_ENTIDAD)
atus_anual_2021$ID_MUNICIPIO <- as.integer(atus_anual_2021$ID_MUNICIPIO)
### DELETE USELESS COLUMS
municipality <- select(municipality,-MM)
### QUERY JOIN( States - Municipality )
locations <- inner_join(states, municipality, by = NULL)
### DELETE USELESS COLUMS AGAIN...
locations <- select(locations,-MM)
### QUERY JOIN(Municipality - Atus_anual_2021_merge)
atus_anual_2021_merge <- inner_join(locations, atus_anual_2021, by = NULL)
## DAY
### GET DATA
days  <- read.csv(".//conjunto_de_datos//tc_dia.csv", header = TRUE,sep = ",")
### CAST ID FIELDS TO INTEGER
atus_anual_2021_merge$ID_DIA <- as.integer(atus_anual_2021_merge$ID_DIA)
### DELETE USELESS COLUMNS
days <- select(days,-MM)
### QUERY JOIN(Hours - Atus_anual_2021_merge)
atus_anual_2021_merge <- inner_join(days, atus_anual_2021_merge, by = NULL)
## HOUR
### GET DATA
hours  <- read.csv(".//conjunto_de_datos//tc_hora.csv", header = TRUE,sep = ",")
### CAST ID FIELDS TO INTEGER
atus_anual_2021_merge$ID_HORA <- as.integer(atus_anual_2021_merge$ID_HORA)
### DELETE USELESS COLUMS
hours <- select(hours,-MM)
### QUERY JOIN(Hours - Atus_anual_2021_merge)
atus_anual_2021_merge <- inner_join(hours, atus_anual_2021_merge, by = NULL)
## MINUTES
### GET DATA
minutes  <- read.csv(".//conjunto_de_datos//tc_minuto.csv", header = TRUE,sep = ",")
### CAST ID FIELDS TO INTEGER
atus_anual_2021_merge$ID_MINUTO <- as.integer(atus_anual_2021_merge$ID_MINUTO)
### DELETE USELESS COLUMS
minutes <- select(minutes,-MM)
### QUERY JOIN(Hours - Atus_anual_2021_merge)
atus_anual_2021_merge <- inner_join(minutes, atus_anual_2021_merge, by = NULL)
## AGE
### GET DATA
ages  <- read.csv(".//conjunto_de_datos//tc_edad.csv", header = TRUE,sep = ",")
### CAST ID FIELDS TO INTEGER
atus_anual_2021_merge$ID_EDAD <- as.integer(atus_anual_2021_merge$ID_EDAD)
### DELETE USELESS COLUMS
ages <- select(ages,-MM)
### QUERY JOIN(Hours - Atus_anual_2021_merge)
atus_anual_2021_merge <- inner_join(ages, atus_anual_2021_merge, by = NULL)
# SET ORIGINAL
atus_anual_2021 = atus_anual_2021_merge
rm(atus_anual_2021_merge)
rm(ages)
rm(days)
rm(hours)
rm(locations)
rm(minutes)
rm(municipality)
rm(states)
# ALREADY AVAILABLE
View(atus_anual_2021)
total_registros = nrow(atus_anual_2021)
atus_anual_data = atus_anual_2021
total_registros = nrow(atus_anual_data)
total_registros
