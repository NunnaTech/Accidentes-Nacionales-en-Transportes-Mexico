group_by(TIPACCID) %>%
summarise(total = length(TIPACCID), .groups = 'drop') %>%
arrange(desc(total))
accidentes_por_tipo
accidentes_por_tipo = atus_anual_data %>%
group_by(TIPACCID) %>%
summarise(total = length(TIPACCID)) %>%
arrange(desc(total))
accidentes_por_tipo
accidentes_con_cinturon = atus_anual_data %>%
group_by(CINTURON) %>%
summarise(total = length(CINTURON), porcentaje = total*100/nrow(atus_anual_data))
accidentes_con_cinturon
estado_de_ebriedad = atus_anual_data %>%
group_by(ALIENTO) %>%
summarise(total = length(ALIENTO),
pocentake = total*100/nrow(atus_anual_data))
estado_de_ebriedad
accidentes_por_estado = atus_anual_data %>%
group_by(NOM_ENTIDAD) %>%
summarise(total = length(NOM_ENTIDAD))
accidentes_por_estado
# Ordenados de mayor a menor.
estados_ordenados_por_cantidad_de_accidentes = accidentes_por_estado%>%
arrange(desc(total))
top_5_estados_con_mas_accidentes = estados_ordenados_por_cantidad_de_accidentes[1:5, ]
top_5_estados_con_mas_accidentes
accidentes_por_estado = atus_anual_data %>%
group_by(NOM_ENTIDAD) %>%
summarise(total = length(NOM_ENTIDAD)) %>%
arrange(desc(total)) %>%
top_n(5)
accidentes_por_estado
accidentes_por_genero = atus_anual_data %>%
group_by(SEXO) %>%
summarise(total = length(SEXO))
accidentes_por_genero
orden_de_genero_de_accidentes =
accidentes_por_genero%>%
arrange(desc(total))
genero_con_mas_accidentes = orden_de_genero_de_accidentes[1,]
genero_con_mas_accidentes
accidentes_por_genero
accidentes_por_genero = atus_anual_data %>%
group_by(SEXO) %>%
summarise(total = length(SEXO))%>%
arrange(desc(total))
accidentes_por_genero
accidentes_por_genero = atus_anual_data %>%
group_by(SEXO) %>%
summarise(total = length(SEXO), porcentaje = total * 100 / nrow(atus_anual_data))%>%
arrange(desc(total))
accidentes_por_genero
sum(accidentes_por_genero$total)
#7 Tasa de porcentaje que suele darse a la fuga(SEXO)
porcentaje_se_fugo = accidentes_por_genero[4,2] * 100 / total_registros
porcentaje_se_fugo #9.7899
#7 Tasa de porcentaje que suele darse a la fuga(SEXO)
porcentaje_se_fugo = accidentes_por_genero[4,2] * 100 / total_registros
total_registros = nrow(atus_anual_data)
#7 Tasa de porcentaje que suele darse a la fuga(SEXO)
porcentaje_se_fugo = accidentes_por_genero[4,2] * 100 / total_registros
porcentaje_se_fugo #9.7899
#7 Tasa de porcentaje que suele darse a la fuga(SEXO)
porcentaje_se_fugo = accidentes_por_genero[4,2] * 100 / total_registros
porcentaje_se_fugo #9.7899
causas_de_accidentes = atus_anual_data %>% group_by(CAUSAACCI) %>%
summarise(total = length(CAUSAACCI))
causas_de_accidentes
#7 Causa del accidente
causas_de_accidentes = atus_anual_data %>% group_by(CAUSAACCI) %>%
summarise(total = length(CAUSAACCI)) %>%
arrange(total)
causas_de_accidentes
accidentes_urbanos = atus_anual_data %>%
group_by(URBANA) %>%
summarise(total = length(URBANA))
accidentes_urbanos
accidentes_urbanos = atus_anual_data %>%
group_by(URBANA) %>%
summarise(total = length(URBANA)) %>%
arrange(total) %>%
top_n(1)
accidentes_urbanos
accidentes_suburbanos = atus_anual_data %>%
group_by(SUBURBANA) %>%
summarise(total = length(SUBURBANA)) %>%
arrange(total) %>%
top_n(1)
accidentes_suburbanos
accidentes_suburbanos = atus_anual_data %>%
group_by(SUBURBANA) %>%
summarise(total = length(SUBURBANA)) %>%
arrange(total)
accidentes_suburbanos
accidentes_urbanos = atus_anual_data %>%
group_by(URBANA) %>%
summarise(total = length(URBANA)) %>%
arrange(desc(total)) %>%
top_n(1)
accidentes_urbanos #Accidente en intersección 282483
accidentes_suburbanos = atus_anual_data %>%
group_by(SUBURBANA) %>%
summarise(total = length(SUBURBANA)) %>%
arrange(desc(total)) %>%
top_n(1)
accidentes_suburbanos
accidentes_suburbanos = atus_anual_data %>%
group_by(SUBURBANA) %>%
summarise(total = length(SUBURBANA)) %>%
arrange(desc(total))
accidentes_suburbanos
accidentes_suburbanos = atus_anual_data %>%
group_by(SUBURBANA) %>%
summarise(total = length(SUBURBANA)) %>%
arrange(desc(total)) %>%
top_n(2)
accidentes_suburbanos
accidentes_suburbanos[2,]
accidentes_suburbanos
accidentes_suburbanos = atus_anual_data %>%
group_by(SUBURBANA) %>%
summarise(total = length(SUBURBANA)) %>%
arrange(desc(total)) %>%
accidentes_suburbanos[2,]  #Accidente en carretera estatal 19684
accidentes_suburbanos = atus_anual_data %>%
group_by(SUBURBANA) %>%
summarise(total = length(SUBURBANA)) %>%
arrange(desc(total))
accidentes_suburbanos[2,]  #Accidente en carretera estatal 19684
accidentes_suburbanos
accidentes_por_genero = atus_anual_data %>%
group_by(SEXO) %>%
summarise(total = length(SEXO),
porcentaje = total * 100 / nrow(atus_anual_data)) %>%
arrange(desc(total))
accidentes_por_genero
horas_de_accidente = atus_anual_data %>%
group_by(ID_HORA) %>%
summarise(total = length(ID_HORA))
View(horas_de_accidente)
dias_de_accidente = atus_anual_data %>%
group_by(DIASEMANA) %>%
summarise(total = length(DIASEMANA))
dias_de_accidente
dias_de_accidente%>%   arrange(desc(total))
#9 y 10 Dia y hora con más probabilidad para tener un accidente(ID_HORA)
horas_de_accidente = atus_anual_data %>%
group_by(ID_HORA) %>%
summarise(total = length(ID_HORA)) %>%
arrange(desc(ID_HORA))
View(horas_de_accidente)
#9 y 10 Dia y hora con más probabilidad para tener un accidente(ID_HORA)
horas_de_accidente = atus_anual_data %>%
group_by(ID_HORA) %>%
summarise(total = length(ID_HORA)) %>%
arrange(desc(total))
View(horas_de_accidente)
dias_de_accidente = atus_anual_data %>%
group_by(DIASEMANA) %>%
summarise(total = length(DIASEMANA)) %>%
arrange(desc(total))
dias_de_accidente
horas_de_accidente
#9 y 10 Dia y hora con más probabilidad para tener un accidente(ID_HORA)
horas_de_accidente = atus_anual_data %>%
group_by(ID_HORA) %>%
summarise(total = length(ID_HORA)) %>%
arrange(desc(total)) %>%
top_n(3)
horas_de_accidente
dias_de_accidente = atus_anual_data %>%
group_by(DIASEMANA) %>%
summarise(total = length(DIASEMANA)) %>%
arrange(desc(total))
dias_de_accidente
estado_de_ebriedad
#3 Porcentajes de accidentes con estado de ebriedad
estado_de_ebriedad = atus_anual_data %>%
group_by(ALIENTO) %>%
summarise(total = length(ALIENTO),
pocentake = total*100/nrow(atus_anual_data)) %>%
arrange(desc(total))
estado_de_ebriedad
#11 Media y moda de edad
edad_en_accidentes = atus_anual_data %>%
group_by(ID_EDAD) %>%
summarise(total = length(ID_EDAD))
View(edad_en_accidentes)
#11 Media y moda de edad
edad_en_accidentes = atus_anual_data %>%
group_by(ID_EDAD) %>%
summarise(total = length(ID_EDAD)) %>%
arrange(desc(total))
View(edad_en_accidentes)
media_de_edad = mean(atus_anual_data$ID_EDAD ,rm = TRUE)
media_de_edad #Edad promedio 38 años.
moda_de_edad = edad_en_accidentes %>% arrange(desc(total)) %>% top_n(1)
moda_de_edad #30 años, 9502
View(edad_en_accidentes)
edad_en_accidentes = edad_en_accidentes[-c(1,2),]
View(edad_en_accidentes)
media_de_edad = mean(atus_anual_data$ID_EDAD ,rm = TRUE)
media_de_edad #Edad promedio 38 años.
moda_de_edad = edad_en_accidentes %>% arrange(desc(total)) %>% top_n(1)
moda_de_edad #30 años, 9502
#12 Saber el porcentaje de muertes basándonos en el cinturón
conductores_muertos = atus_anual_data %>%
group_by(CINTURON) %>%
summarise(total = sum(CONDMUERTO))
conductores_muertos
#12 Saber el porcentaje de muertes basándonos en el cinturón
conductores_muertos = atus_anual_data %>%
group_by(CINTURON) %>%
summarise(total = sum(CONDMUERTO))
conductores_muertos = atus_anual_data %>%
group_by(CINTURON) %>%
summarise(total = sum(CONDMUERTO))
View(atus_anual_data)
#12 Saber el porcentaje de muertes basándonos en el cinturón
conductores_muertos = atus_anual_data %>%
group_by(CINTURON) %>%
summarise(total = sum(CONDMUERTO),  .groups = 'drop')
aliento_alcoholico = atus_anual_data %>%
group_by(ALIENTO) %>%
summarise(total = length(ALIENTO))
conductores_muertos = atus_anual_data %>%
group_by(CINTURON) %>%
summarise(total = sum(CONDMUERTO))
conductores_muertos
conductores_muertos = atus_anual_data %>%
group_by(CINTURON) %>%
summarise(total = sum(CONDMUERTO))
conductores_muertos = atus_anual_data %>%
group_by(CINTURON)
conductores_muertos
conductores_muertos = atus_anual_data %>%
group_by(CINTURON) %>%
summarise(total = length(CINTURON))
conductores_muertos
#12 Saber el porcentaje de muertes basándonos en el cinturón
conductores_muertos = atus_anual_data %>%
group_by(CINTURON) %>%
summarise(total = length(CINTURON), muertos = sum(CONDMUERTO))
conductores_muertos = atus_anual_data %>%
group_by(CONDMUERTO)
conductores_muertos
conductores_muertos = atus_anual_data %>%
group_by(CONDMUERTO) %>%
summarise(total = length(CINTURON))
conductores_muertos
#12 Saber el porcentaje de muertes basándonos en el cinturón
conductores_muertos = atus_anual_data %>%
group_by(CINTURON) %>%
summarise(total = length(CINTURON), muertos = sum(as.numeric(CONDMUERTO)))
conductores_muertos
#12 Saber el porcentaje de muertes basándonos en el cinturón
conductores_muertos = atus_anual_data %>%
group_by(CINTURON) %>%
summarise(total = length(CINTURON),
muertos = sum(as.numeric(CONDMUERTO)),
porcentaje = muertos * 100 / sum(muertos))
conductores_muertos
#12 Saber el porcentaje de muertes basándonos en el cinturón
conductores_muertos = atus_anual_data %>%
group_by(CINTURON) %>%
summarise(total = length(CINTURON),
muertos = sum(as.numeric(CONDMUERTO)))
conductores_muertos
conductores_muertos = conductores_muertos %>%
summarise(porcentaje = muertos*100/sum(muertos))
conductores_muertos
#12 Saber el porcentaje de muertes basándonos en el cinturón
conductores_muertos = atus_anual_data %>%
group_by(CINTURON) %>%
summarise(total = length(CINTURON),
muertos = sum(as.numeric(CONDMUERTO)))
conductores_muertos = conductores_muertos %>%
summarise(CINTURON, total, muertos,  porcentaje = muertos*100/sum(muertos))
conductores_muertos
#14 Sobriedad del conductor presunto responsable (ALIENTO)
aliento_alcoholico = atus_anual_data %>%
group_by(ALIENTO) %>%
summarise(total = length(ALIENTO))
aliento_alcoholico
#14 Sobriedad del conductor presunto responsable (ALIENTO)
aliento_alcoholico = atus_anual_data %>%
group_by(ALIENTO) %>%
summarise(total = length(ALIENTO), porcentaje = total * 100 /total_registros)
aliento_alcoholico
aliento_alcoholico
install.packages("ggplot2")
library(ggplot2)
# ALREADY AVAILABLE
View(atus_anual_2021)
atus_anual_2021 <- read_csv(".//conjunto_de_datos//atus_anual_2021.csv")
# Set work directory on Linux
setwd("~//Escritorio//Accidentes-Nacionales-en-Transportes-Mexico")
dir()
atus_anual_2021 <- read_csv(".//conjunto_de_datos//atus_anual_2021.csv")
library(mice)
library(readr)
library(dplyr)
library(ggplot2)
atus_anual_2021 <- read_csv(".//conjunto_de_datos//atus_anual_2021.csv")
#View(atus_anual_2021)
# funtion to delete Na
delete_na = function(x){ifelse(is.na(x), mfv(x, na_rm = TRUE), x)}
atus_anual_2021_checked = data.frame(sapply(atus_anual_2021,delete_na))
# Caught duplicated values
values <- duplicated(atus_anual_2021_checked)
# Obtained values
atus_anual_2021_no_duplicated = atus_anual_2021_checked[!values,]
atus_anual_2021 = atus_anual_2021_no_duplicated
rm(atus_anual_2021_no_duplicated)
rm(atus_anual_2021_checked)
rm(values)
## LOCATION
### GET DATA
states <- read.csv(".//conjunto_de_datos//tc_entidad.csv", header = TRUE,sep = ",")
municipality <- read.csv(".//conjunto_de_datos//tc_municipio.csv")
### CAST ID FIELDS TO INTEGER
atus_anual_2021$ID_ENTIDAD <- as.integer(atus_anual_2021$ID_ENTIDAD)
atus_anual_2021$ID_MUNICIPIO <- as.integer(atus_anual_2021$ID_MUNICIPIO)
### DELETE USELESS COLUMS
municipality <- select(municipality,-MM)
### QUERY JOIN( States - Municipality )
locations <- inner_join(states, municipality, by = NULL)
### DELETE USELESS COLUMS AGAIN...
locations <- select(locations,-MM)
### QUERY JOIN(Municipality - Atus_anual_2021_merge)
atus_anual_2021_merge <- inner_join(locations, atus_anual_2021, by = NULL)
## DAY
### GET DATA
days  <- read.csv(".//conjunto_de_datos//tc_dia.csv", header = TRUE,sep = ",")
### CAST ID FIELDS TO INTEGER
atus_anual_2021_merge$ID_DIA <- as.integer(atus_anual_2021_merge$ID_DIA)
### DELETE USELESS COLUMNS
days <- select(days,-MM)
### QUERY JOIN(Hours - Atus_anual_2021_merge)
atus_anual_2021_merge <- inner_join(days, atus_anual_2021_merge, by = NULL)
## HOUR
### GET DATA
hours  <- read.csv(".//conjunto_de_datos//tc_hora.csv", header = TRUE,sep = ",")
### CAST ID FIELDS TO INTEGER
atus_anual_2021_merge$ID_HORA <- as.integer(atus_anual_2021_merge$ID_HORA)
### DELETE USELESS COLUMS
hours <- select(hours,-MM)
### QUERY JOIN(Hours - Atus_anual_2021_merge)
atus_anual_2021_merge <- inner_join(hours, atus_anual_2021_merge, by = NULL)
## MINUTES
### GET DATA
minutes  <- read.csv(".//conjunto_de_datos//tc_minuto.csv", header = TRUE,sep = ",")
### CAST ID FIELDS TO INTEGER
atus_anual_2021_merge$ID_MINUTO <- as.integer(atus_anual_2021_merge$ID_MINUTO)
### DELETE USELESS COLUMS
minutes <- select(minutes,-MM)
### QUERY JOIN(Hours - Atus_anual_2021_merge)
atus_anual_2021_merge <- inner_join(minutes, atus_anual_2021_merge, by = NULL)
## AGE
### GET DATA
ages  <- read.csv(".//conjunto_de_datos//tc_edad.csv", header = TRUE,sep = ",")
### CAST ID FIELDS TO INTEGER
atus_anual_2021_merge$ID_EDAD <- as.integer(atus_anual_2021_merge$ID_EDAD)
### DELETE USELESS COLUMS
ages <- select(ages,-MM)
### QUERY JOIN(Hours - Atus_anual_2021_merge)
atus_anual_2021_merge <- inner_join(ages, atus_anual_2021_merge, by = NULL)
# SET ORIGINAL
atus_anual_2021 = atus_anual_2021_merge
rm(atus_anual_2021_merge)
rm(ages)
rm(days)
rm(hours)
rm(locations)
rm(minutes)
rm(municipality)
rm(states)
atus_anual_data = atus_anual_2021
total_registros = nrow(atus_anual_data)
# 1 Total de acccidentes provocados por cada tipo de accidente de mayor a menor
accidentes_por_tipo = atus_anual_data %>%
group_by(TIPACCID) %>%
summarise(total = length(TIPACCID)) %>%
arrange(desc(total))
accidentes_por_tipo
ggplot(df, aes(accidentes_por_tipo)) + geom_bar()
accidentes_por_tipo
ggplot(df, aes(accidentes_por_tipo)) + geom_bar()
ggplot(accidentes_por_tipo, aes(accidentes_por_tipo)) + geom_bar()
ggplot(accidentes_por_tipo, aes(x = accidentes_por_tipo$TIPACCID, y = accidentes_por_tipo$total)) + geom_bar()
ggplot(data =  accidentes_por_tipo, aes(x = accidentes_por_tipo$TIPACCID, y = accidentes_por_tipo$total)) + geom_bar()
ggplot(data =  accidentes_por_tipo, aes(x = TIPACCID, y = total)) + geom_bar()
ggplot(data =  accidentes_por_tipo, aes(x = total, y = TIPACCID)) + geom_bar()
table(accidentes_por_tipo)
table(accidentes_por_tipo$TIPACCID)
accidentes_por_tipo
str(accidentes_por_tipo)
class(accidentes_por_tipo)
View(accidentes_por_tipo)
ggplot(data = accidentes_por_tipo, mapping = aes(x = TIPACCID, y = total)) + geom_bar()
ggplot(data = accidentes_por_tipo, mapping = aes(x = TIPACCID, y = total)) + geom_bar(stat='identity')
ggplot(data = accidentes_por_tipo, mapping = aes(x = TIPACCID, y = total)) + geom_bar(stat='identity') + coord_flip()
+ geom_text(aes(label = total), vjust = -0.3, size = 3.5) +
+ coord_flip()
+ geom_text(aes(label = total), vjust = -0.3, size = 3.5) +
+ coord_flip()
+ coord_flip()
+ coord_flip()
+ geom_text(aes(label = total))
+ coord_flip()
+ coord_flip()
+ coord_flip()
+ geom_bar(stat='identity') + coord_flip()
#2 Porcentajes de accidentes con o sin cinturón de seguridad
accidentes_con_cinturon = atus_anual_data %>%
group_by(CINTURON) %>%
summarise(total = length(CINTURON),
porcentaje = total*100/nrow(atus_anual_data))
+ geom_bar(stat='identity') + coord_flip()
ggplot(data = accidentes_por_tipo,
mapping = aes(x = TIPACCID, y = total)) + geom_bar(stat='identity') + coord_flip()
+ geom_bar(stat='identity') + coord_flip()
ggplot(data = accidentes_por_tipo,
mapping = aes(x = TIPACCID, y = total))
+ geom_bar(stat='identity') + coord_flip()
ggplot(data = accidentes_por_tipo,
mapping = aes(x = TIPACCID, y = total)) + geom_bar(stat='identity') + coord_flip()
ggplot(data = accidentes_por_tipo,
mapping = aes(x = TIPACCID, y = total)) + geom_bar(stat='identity') + geom_text(aes(label = total), vjust = -0.3, size = 3.5) + coord_flip()
ggplot(data = accidentes_por_tipo,
mapping = aes(x = TIPACCID, y = total)) + geom_bar(stat='identity') + geom_text(aes(label = total)) + coord_flip()
, vjust = -0.3, size = 3.5
ggplot(data = accidentes_por_tipo,
mapping = aes(x = TIPACCID, y = total)) + geom_bar(stat='identity') + geom_text(aes(label = total), vjust = -0.3, size = 3.5) + coord_flip()
ggplot(data = accidentes_por_tipo,
mapping = aes(x = TIPACCID, y = total)) + geom_bar(stat='identity') + geom_text(aes(label = total)) + coord_flip()
ggplot(
data = accidentes_por_tipo,
mapping = aes(x = TIPACCID, y = total)
) + geom_bar(stat='identity') + geom_text(aes(label = total), vjust = 1.6) + coord_flip()
ggplot(
data = accidentes_por_tipo,
mapping = aes(x = TIPACCID, y = total)
) + geom_bar(stat='identity') + geom_text(aes(label = total)) + coord_flip() + paletteer_c("grDevices::Cividis", 30)
ggplot(
data = accidentes_por_tipo,
mapping = aes(x = TIPACCID, y = total)
) + geom_bar(stat='identity') + geom_text(aes(label = total)) + coord_flip() + paletteer_c("grDevices::Cividis", 30)
ggplot(
data = accidentes_por_tipo,
mapping = aes(x = TIPACCID, y = total)
) + geom_bar(stat='identity') + geom_text(aes(label = total)) + coord_flip()
ggplot(
data = accidentes_por_tipo,
mapping = aes(x = TIPACCID, y = total)
) + geom_bar(stat='identity') + geom_text(aes(label = total), vjust = 6) + coord_flip()
ggplot(
data = accidentes_por_tipo,
mapping = aes(x = TIPACCID, y = total)
) + geom_bar(stat='identity') + geom_text(aes(label = total), hjust = 9) + coord_flip()
ggplot(
data = accidentes_por_tipo,
mapping = aes(x = TIPACCID, y = total)
) + geom_bar(stat='identity') + geom_text(aes(label = total), hjust = 1) + coord_flip()
ggplot(
data = accidentes_por_tipo,
mapping = aes(x = TIPACCID, y = total)
) + geom_bar(stat='identity') + geom_text(aes(label = total), hjust = -1) + coord_flip()
ggplot(
data = accidentes_por_tipo,
mapping = aes(x = TIPACCID, y = total)
) + geom_bar(stat='identity') + geom_text(aes(label = total), hjust = -0.5) + coord_flip()
ggplot(
data = accidentes_por_tipo,
mapping = aes(x = TIPACCID, y = total)
) + geom_bar(stat='identity') + geom_text(aes(label = total), hjust = -0.2) + coord_flip()
ggplot(
data = accidentes_por_tipo,
mapping = aes(x = TIPACCID, y = total)
) + geom_bar(stat='identity') + geom_text(aes(label = total), hjust = -0.1) + coord_flip()
ggplot(
data = accidentes_por_tipo,
mapping = aes(x = TIPACCID, y = total)
) + geom_bar(stat='identity') + geom_text(aes(label = total), hjust = 0) + coord_flip()
ggplot(
data = accidentes_por_tipo,
mapping = aes(x = TIPACCID, y = total)
) + geom_bar(stat='identity') + geom_text(aes(label = total)) + coord_flip()
ggplot(
data = accidentes_por_tipo,
mapping = aes(x = TIPACCID, y = total)
) + geom_bar(stat='identity') + geom_text(aes(label = total), hjust = 0) + coord_flip() + scale_fill_gradient(paletteer_c("grDevices::Cividis", 30)
)
ggplot(
data = accidentes_por_tipo,
mapping = aes(x = TIPACCID, y = total)
) + geom_bar(stat='identity') + geom_text(aes(label = total), hjust = 0) + coord_flip() + scale_fill_gradient(paletteer_c("grDevices::Cividis", 30))
?palette
?scale_fill_brewer
ggplot(
data = accidentes_por_tipo,
mapping = aes(x = TIPACCID, y = total)
) + geom_bar(stat='identity') + geom_text(aes(label = total), hjust = 0) + coord_flip() + scale_fill_brewer(palette = "Greens")
ggplot(
data = accidentes_por_tipo,
mapping = aes(x = TIPACCID, y = total)
) + geom_bar(stat='identity') + geom_text(aes(label = total), hjust = 0) + coord_flip() + scale_fill_brewer(palette = "Greens") + theme_classic()
ggplot(
data = accidentes_por_tipo,
mapping = aes(x = TIPACCID, y = total)
) + geom_bar(stat='identity') + geom_text(aes(label = total), hjust = 0) + coord_flip() + scale_fill_identity(palette = "Greens") + theme_classic()
